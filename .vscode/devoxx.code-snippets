{
	
	"startNewPomodoro": {
		"prefix": "startNewPomodoro",
		"body": [
			"let minuteLeft, intervalId;",
			"",
			"const startNewPomodoro = () => {",
			"  minuteLeft = 5",
			"  browser.browserAction.setBadgeText({ text: minuteLeft.toString() });",
			"  intervalId = setInterval(handlePomodoro, window.oneMinuteInMs);",
			"  //browser.alarms.create(\"Times Up\", { periodInMinutes: window.oneMinuteInMs });",
			"}",
			"",
			"const handlePomodoro = () => {",
			"  minuteLeft--;",
			"  browser.browserAction.setBadgeText({ text: minuteLeft.toString() });",
			"};"
		],
		"description": "startNewPomodoro"
	},
	"onInstalled": {
		"prefix": "onInstalled",
		"body": [
			"function onInstalled() {",
			"    console.log(\"Hello Devoxx & App Installed !\");",
			"}"
		],
		"description": "onInstalled"
	},
	"onStartup": {
		"prefix": "onStartup",
		"body": [
			"function onStartup() {",
			"    console.log(\"Hello Devoxx & App Started !\");",
			"}"
		],
		"description": "onStartup"
	},
	"openTab": {
		"prefix": "openTab",
		"body": [
			"const openBreakTab = () => {",
			"  browser.tabs.create({ url: \"https://www.nytimes.com/games/wordle/index.html\" });",
			"  browser.notifications.clear(\"TimesUp\");",
			"};"
		],
		"description": "openTab"
	},
	"newNotification": {
		"prefix": "newNotification",
		"body": [
			"  if (minuteLeft === 0) {",
			"    clearInterval(intervalId);",
			"    // browser.alarms.clear(\"Times Up\");",
			"",
			"    browser.notifications.create(\"TimesUp\",",
			"      {",
			"        title: \"It's time for a break\",",
			"        message: \"Let's play\",",
			"        type: \"basic\",",
			"        iconUrl: browser.runtime.getURL(\"icon.png\")",
			"      });",
			"    browser.browserAction.setBadgeText({ text: \"\" });",
			"  }",
		],
		"description": "newNotification"
	},
	"initUserPref": {
		"prefix": "initUserPref",
		"body": [
			"await browser.storage.local.set({ \"user\": userParams });"
		],
		"description": "initUserPref"
	},
	"loadUserPref": {
		"prefix": "loadUserPref",
		"body": [
			"// View storage: chrome.storage.local.get(function(result){console.log(result)})",
			"userParams = await browser.storage.local.get(\"user\") as UserPreferences;"
		],
		"description": "loadUserPref"
	}
}
